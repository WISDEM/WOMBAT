[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "wombat"
version = "0.9.2"
authors = [{name = "Rob Hammond", email = "rob.hammond@nrel.gov"}]
readme = {file = "README.md", content-type = "text/markdown"}
description = "Windfarm operations and maintenance cost-benefit analysis tool"
requires-python = ">=3.9, <3.11"
license = {file = "LICENSE"}
dependencies = [
    "attrs>=21",
    "numpy>=1.21",
    "scipy>=1.8",
    "pandas>=2",
    "polars>=0.17",
    "pyarrow>=10",
    "jupyterlab>=3",
    "simpy>=4.0.1",
    "pyyaml>=6",
    "geopy>=2.3",
    "networkx>=2.7",
    "matplotlib>=3.3",
    "types-attrs>=19",
    "types-typed-ast>=1.5",
    "types-PyYAML>=6",
    "types-python-dateutil>=2.8",
]
keywords = [
    "python3",
    "wind-energy",
    "operations-maintenance",
    "discrete-event-simulation",
    "simulation",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.urls]
source = "https://github.com/WISDEM/WOMBAT"
documentation = "https://wisdem.github.io/WOMBAT/"
issues = "https://github.com/WISDEM/WOMBAT/issues"
changelog = "https://github.com/WISDEM/WOMBAT/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pre-commit>=2.20",
    "black>=22.1",
    "isort>=5.10",
    "pytest>=7",
    "pytest-cov>=4",
    "mypy==0.991",
    "ruff==0.0.246",
]
docs = [
    "jupyter-book>=0.15",
    "myst-nb>=0.16",
    "myst-parser>=0.17",
    "linkify-it-py>=2",
    "sphinx-autodoc-typehints",
    "sphinxcontrib-autoyaml",
    "sphinxcontrib-bibtex>=2.4",
    "sphinxcontrib-spelling>=7",
]
all = [
    "pre-commit>=2.20",
    "black>=22.1",
    "isort>=5.10",
    "pytest>=7",
    "pytest-cov>=4",
    "mypy==0.991",
    "ruff==0.0.246",
    "jupyter-book>=0.15",
    "myst-nb>=0.16",
    "myst-parser>=0.17",
    "linkify-it-py>=2",
    "sphinx-autodoc-typehints",
    "sphinxcontrib-autoyaml",
    "sphinxcontrib-bibtex>=2.4",
    "sphinxcontrib-spelling>=7",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["wombat", "library", "*.yaml", "*.csv"]
exclude = ["*.tests", "*.tests.*", "tests.*", "tests"]

[coverage.run]
# Coverage.py configuration file
# https://coverage.readthedocs.io/en/latest/config.html
branch = true
source = "wombat/*"
omit = [
    "setup.py",
    "tests/*"
]

[tool.pytest.ini_options]
addopts = "--strict-markers --pdbcls=tests:Debugger -r sxX --cov=wombat --cov-report=html --cov-report=term-missing:skip-covered --no-cov-on-fail --ignore=setup.py"
testpaths = "tests"
cache_dir = ".cache"
filterwarnings = [
  "ignore::DeprecationWarning:simpy.*:",
  "ignore::DeprecationWarning:pkg_resources.*:",
]

[tool.isort]
skip = [
  "wombat/__init__.py",
  "wombat/core/__init__.py",
  "wombat/utilities/__init__.py",
  "wombat/windfarm/__init__.py",
  "wombat/windfarm/system/__init__.py",
]
multi_line_output = 3
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "LOCALFOLDER",
]
known_third_party = [
  "attrs",
  "numpy",
  "networkx",
  "pandas",
  "pytest",
  "scipy",
  "simpy",
]
known_first_party = "wombat"
known_local_folder = "tests"
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
use_parentheses = true
length_sort = true
lines_after_imports = 2
line_length = 88


[tool.black]
target-version=["py39", "py310"]
line-length=88

include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
src = ["wombat", "tests"]
line-length = 88
target-version = "py39"
ignore-init-module-imports = true

# See https://github.com/charliermarsh/ruff#supported-rules
# for rules included and matching to prefix.
# TODO: "FBT", "B", "PIE, "T20", "SIM", "PTH", "PD", "I", "PL"
select = ["F", "E", "W", "C4", "D", "UP"]

# D205: not using summary lines and descriptions, just descriptions
# D401: don't believe enough in imperative mode to make all the changes currently
ignore = ["D205", "D401"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["F", "E", "W", "C4", "D", "UP"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
"setup.py" = ["D104"]
"library/__init__.py" = ["D104"]
"library/code_comparison/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/cables/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/project/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/project/config/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/project/plant/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/project/port/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/results/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/substations/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/turbines/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/vessels/__init__.py" = ["D104"]
"library/code_comparison/dinwoodie/weather/__init__.py" = ["D104"]
"library/code_comparison/iea26/__init__.py" = ["D104"]
"library/code_comparison/iea26/cables/__init__.py" = ["D104"]
"library/code_comparison/iea26/project/__init__.py" = ["D104"]
"library/code_comparison/iea26/project/config/__init__.py" = ["D104"]
"library/code_comparison/iea26/project/plant/__init__.py" = ["D104"]
"library/code_comparison/iea26/project/port/__init__.py" = ["D104"]
"library/code_comparison/iea26/results/__init__.py" = ["D104"]
"library/code_comparison/iea26/substations/__init__.py" = ["D104"]
"library/code_comparison/iea26/turbines/__init__.py" = ["D104"]
"library/code_comparison/iea26/vessels/__init__.py" = ["D104"]
"library/code_comparison/iea26/weather/__init__.py" = ["D104"]
"library/corewind/__init__.py" = ["D104"]
"library/corewind/cables/__init__.py" = ["D104"]
"library/corewind/project/__init__.py" = ["D104"]
"library/corewind/project/config/__init__.py" = ["D104"]
"library/corewind/project/plant/__init__.py" = ["D104"]
"library/corewind/project/port/__init__.py" = ["D104"]
"library/corewind/results/__init__.py" = ["D104"]
"library/corewind/substations/__init__.py" = ["D104"]
"library/corewind/turbines/__init__.py" = ["D104"]
"library/corewind/vessels/__init__.py" = ["D104"]
"library/corewind/weather/__init__.py" = ["D104"]
"tests/library/__init__.py" = ["D104"]
"tests/library/cables/__init__.py" = ["D104"]
"tests/library/project/__init__.py" = ["D104"]
"tests/library/project/config/__init__.py" = ["D104"]
"tests/library/project/plant/__init__.py" = ["D104"]
"tests/library/substations/__init__.py" = ["D104"]
"tests/library/turbines/__init__.py" = ["D104"]
"tests/library/vessels/__init__.py" = ["D104"]
"tests/library/weather/__init__.py" = ["D104"]
"wombat/__init__.py" = ["F401"]
"wombat/core/__init__.py" = ["F401"]
"wombat/utilities/__init__.py" = ["F401"]
"wombat/windfarm/__init__.py" = ["F401"]
"wombat/windfarm/system/__init__.py" = ["F401"]

[tool.ruff.pydocstyle]
convention = "numpy"
