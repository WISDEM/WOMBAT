from time import perf_counter  # timing purposes only

import numpy as np
import pandas as pd

from wombat.core import Simulation
from wombat.core.library import load_yaml, DINWOODIE

# Seed the random variable for consistently randomized results
np.random.seed(0)

# Improve ability to read longer outputs
pd.set_option("display.float_format", '{:,.2f}'.format)
pd.set_option("display.max_rows", 1000)
pd.set_option("display.max_columns", 1000)

library_path = DINWOODIE

config = load_yaml(str(library_path / "config"), "base.yaml")

for k, v in config.items():
  print(f"\033[1m{k}\033[0m:\n  {v}")  # make the keys bold

# Option 1
sim = Simulation.from_config(config)

# Delete the .log files that get initialized
sim.env.cleanup_log_files(log_only=True)

# Option 2
# Note here that a string "DINWOODIE" is passed because the Simulation class knows to
# retrieve the appropriate path, and that the simulation_name matches the configuration
simulation_name = "dinwoodie_base"
sim = Simulation(
    library_path="DINWOODIE",
    config="base.yaml"
)

# Timing for a demonstration of performance
start = perf_counter()

sim.run()

end = perf_counter()

timing = end - start
if timing > 60 * 2:
    print(f"Run time: {timing / 60:,.2f} minutes")
else:
    print(f"Run time: {timing:,.4f} seconds")

net_cf = sim.metrics.capacity_factor(which="net", frequency="project", by="windfarm")
gross_cf = sim.metrics.capacity_factor(which="gross", frequency="project", by="windfarm")
print(f"  Net Capacity Factor: {net_cf:2.1f}%")
print(f"Gross Capacity Factor: {gross_cf:2.1f}%")

# Report back a subset of the metrics
total = sim.metrics.time_based_availability(frequency="project", by="windfarm")
print(f"  Project time-based availability: {total * 100:.1f}%")

total = sim.metrics.production_based_availability(frequency="project", by="windfarm")
print(f"Project energy-based availability: {total * 100:.1f}%")

total = sim.metrics.equipment_costs(frequency="project", by_equipment=False)
print(f"          Project equipment costs: ${total / sim.metrics.project_capacity:,.2f}/MW")


sim.env.cleanup_log_files(log_only=False)
